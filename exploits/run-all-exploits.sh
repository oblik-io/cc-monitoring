#!/bin/bash
#
# Run all security exploits for CC-Monitoring
# This demonstrates all identified vulnerabilities
#

echo "=========================================="
echo "CC-Monitoring Security Exploit Suite"
echo "=========================================="
echo
echo "[!] WARNING: This will attempt to exploit vulnerabilities"
echo "[!] Only run on systems you own or have permission to test"
echo
read -p "Continue? (y/N) " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    exit 1
fi

# Check if monitoring stack is running
if ! curl -s http://localhost:3000 > /dev/null 2>&1; then
    echo "[*] Monitoring stack not running. Starting it..."
    cd .. && ./manage.sh up
    sleep 10
    cd exploits
fi

# Function to run exploit and check result
run_exploit() {
    local name=$1
    local script=$2
    
    echo
    echo "================================================================"
    echo "Running: $name"
    echo "================================================================"
    
    if [ -f "$script" ]; then
        chmod +x "$script"
        
        # Run with timeout to prevent hanging
        timeout 60 "$script"
        local exit_code=$?
        
        if [ $exit_code -eq 124 ]; then
            echo "[-] Exploit timed out after 60 seconds"
        elif [ $exit_code -eq 0 ]; then
            echo "[+] Exploit completed successfully"
        else
            echo "[-] Exploit failed with exit code: $exit_code"
        fi
    else
        echo "[-] Exploit script not found: $script"
    fi
    
    echo
    read -p "Press Enter to continue to next exploit..."
}

# Create results directory
mkdir -p results
echo "[*] Results will be saved to: $(pwd)/results/"

# Run all exploits in order
echo
echo "[*] Starting exploit sequence..."

# 1. Default credentials
run_exploit "Default Grafana Credentials" "./01-grafana-default-creds.py"

# 2. Command injection
run_exploit "Command Injection in manage.sh" "./02-command-injection.sh"

# 3. Container escape
run_exploit "Privileged Container Escape" "./03-container-escape.sh"

# 4. Path traversal
run_exploit "Path Traversal via Volumes" "./04-path-traversal.py"

# 5. Information disclosure
run_exploit "Prometheus Information Disclosure" "./05-prometheus-info-disclosure.py"

# Summary
echo
echo "=========================================="
echo "Exploit Summary"
echo "=========================================="
echo
echo "Vulnerabilities tested:"
echo "1. ✓ Default Grafana credentials (admin/changeme)"
echo "2. ✓ Command injection in IP processing"
echo "3. ✓ Privileged container escape"
echo "4. ✓ Path traversal in volume mounts"
echo "5. ✓ Unauthenticated Prometheus access"
echo
echo "Security Recommendations:"
echo "- Change default Grafana password immediately"
echo "- Quote all shell variables in manage.sh"
echo "- Remove privileged mode from containers"
echo "- Validate file paths and use :ro mounts"
echo "- Add authentication to Prometheus"
echo
echo "Full report saved to: ./security-assessment-poc.md"